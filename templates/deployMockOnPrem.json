{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      },
      "minLength": 3,
      "maxLength": 6
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Account type, premium vs standard, and local, global redundancy"
      },
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS"
      ]
    },
    "adminUserName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "mocOnpremNetwork": {
      "type": "object",
      "defaultValue": {
        "name": "onprem-vnet",
        "addressPrefix": "192.168.0.0/16",
        "subnetName": "mgmt",
        "subnetPrefix": "192.168.1.128/25"
      }
    },
    "mocOnpremGateway": {
      "type": "object",
      "defaultValue": {
        "name": "onprem-vpn-gateway",
        "subnetName": "GatewaySubnet",
        "subnetPrefix": "192.168.255.224/27",
        "publicIPAddressName": "onprem-vpn-gateway-ip"
      }
    },
    "bastionHost": {
      "type": "object",
      "defaultValue": {
        "name": "AzureBastionHost",
        "subnetName": "AzureBastionSubnet",
        "subnetPrefix": "192.168.254.0/27",
        "publicIPAddressName": "bastion-ip",
        "nsgName": "bastion-nsg"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine 1 Server Name."
      },
      "minLength": 2,
      "maxLength": 4
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The virtual machine server size."
      },
      "defaultValue": "Standard_D16s_v3",
      "allowedValues": [
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_D16s_v4",
        "Standard_D32s_v4",
        "Standard_D64s_v4",
        "Standard_D16d_v4",
        "Standard_D32d_v4",
        "Standard_D64d_v4",
        "Standard_D16ds_v4",
        "Standard_D32ds_v4",
        "Standard_D64ds_v4",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E16-4s_v3",
        "Standard_E16-8s_v3",
        "Standard_E20s_v3",
        "Standard_E32s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32-16s_v3",
        "Standard_E48s_v3",
        "Standard_E64s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E8s_v4",
        "Standard_E16s_v4",
        "Standard_E16-8s_v4",
        "Standard_E20s_v4",
        "Standard_E32s_v4",
        "Standard_E32-8s_v4",
        "Standard_E32-16s_v4",
        "Standard_E48s_v4",
        "Standard_E64s_v4",
        "Standard_E64-16s_v4",
        "Standard_E64-32s_v4",
        "Standard_E8d_v4",
        "Standard_E16d_v4",
        "Standard_E20d_v4",
        "Standard_E32d_v4",
        "Standard_E48d_v4",
        "Standard_E64d_v4",
        "Standard_E8ds_v4",
        "Standard_E16ds_v4",
        "Standard_E20ds_v4",
        "Standard_E32ds_v4",
        "Standard_E48ds_v4",
        "Standard_E64ds_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-32ds_v4"
      ]
    },
    "dataDiskSize": {
      "type": "string",
      "defaultValue": "128",
      "allowedValues": [
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024"
      ],
      "metadata": {
        "description": "The size of the individual data disks in GiB. 8 of these will be provisioned therefore 32GiB is the recommended default."
      }
    },
    "dataDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The Storage type of the VM data disk. If your VM contains an 's' in the VM size, you can select Premium_LRS storage for increased performance, but at a higher cost."
      }
    },
    "configureSitetosite": {
      "type": "bool",
      "defaultValue": true
    },
    "location": {
      "type": "string"
    }
  },
  "variables": {
    "cleanPrefix": "[toLower(parameters('prefix'))]",
    "storageAccountName": "[concat(parameters('prefix'), uniqueString(resourceGroup().id), '2')]",
    "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "vmName": "[concat(variables('cleanPrefix'), '-dp-', parameters('vmName'), '-vm')]",
    "NicName": "[concat(variables('vmName'),'-nic')]",
    "windowsOSVersion": "2019-datacenter-gensecond",
    "dataDisksCount": 8
  },
  "resources": [
    {
      "comments": "## Storage Account ##",
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Storage Account"
      },
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "comments": "Hub virtual network and diagnostic configuration",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[parameters('mocOnpremNetwork').name]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('mocOnpremNetwork').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('mocOnpremNetwork').subnetName]",
            "properties": {
              "addressPrefix": "[parameters('mocOnpremNetwork').subnetPrefix]"
            }
          },
          {
            "name": "[parameters('mocOnpremGateway').subnetName]",
            "properties": {
              "addressPrefix": "[parameters('mocOnpremGateway').subnetPrefix]"
            }
          },
          {
            "name": "[parameters('bastionHost').subnetName]",
            "properties": {
              "addressPrefix": "[parameters('bastionHost').subnetPrefix]"
            }
          }
        ]
      }
    },
    {
      "comments": "Public IP address for VPN Gateway",
      "condition": "[parameters('configureSitetosite')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[parameters('mocOnpremGateway').publicIPAddressName]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "VPN Gateway",
      "condition": "[parameters('configureSitetosite')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2019-11-01",
      "name": "[parameters('mocOnpremGateway').name]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('mocOnpremNetwork').name)]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('mocOnpremGateway').publicIPAddressName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('mocOnpremNetwork').name, parameters('mocOnpremGateway').subnetName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('mocOnpremGateway').publicIPAddressName)]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "Basic",
          "tier": "Basic"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false
      }
    },
    {
      "comments": "Public IP address for Bastion",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-05-01",
      "name": "[parameters('bastionHost').publicIPAddressName]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "comments": "Network security group, rules for Bastion",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('bastionHost').nsgName]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "bastion-in-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "bastion-control-in-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "GatewayManager",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "bastion-in-host",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          },
          {
            "name": "bastion-vnet-out-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRanges": [
                "22",
                "3389"
              ],
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "bastion-azure-out-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "AzureCloud",
              "access": "Allow",
              "priority": 120,
              "direction": "Outbound"
            }
          },
          {
            "name": "bastion-out-host",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "8080",
                "5701"
              ],
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 130,
              "direction": "Outbound"
            }
          },
          {
            "name": "bastion-out-deny",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1000,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "comments": "Azure Bastion and diagnostic configuration",
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2020-06-01",
      "name": "[parameters('bastionHost').name]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('mocOnpremNetwork').name)]",
        "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('mocOnpremNetwork').name, parameters('bastionHost').subnetName)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "Network interface for Windows VMs (optional)",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-05-01",
      "name": "[variables('NicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('mocOnpremNetwork').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('mocOnpremNetwork').name, parameters('mocOnpremNetwork').subnetName)]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "Windows VMs (optional)",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": true
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[variables('dataDisksCount')]",
              "input": {
                "name": "[concat(parameters('vmName'),'DataDisk',copyIndex('dataDisks'))]",
                "diskSizeGB": "[parameters('dataDiskSize')]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "caching": "None",
                "managedDisk": {
                  "storageAccountType": "[parameters('dataDiskType')]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "Microsoft.Compute.BGInfoExtension",
          "type": "extensions",
          "apiVersion": "2016-04-30-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[variables('vmName')]"
          ],
          "tags": {
            "displayName": "BGInfoExtension"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "BGInfo",
            "typeHandlerVersion": "2.1",
            "autoUpgradeMinorVersion": true,
            "settings": {},
            "protectedSettings": null
          }
        }
      ]
    }
  ],
  "outputs": {
    "vpnIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('mocOnpremGateway').name)).bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]]"
    },
    "mocOnpremNetworkPrefix": {
      "type": "string",
      "value": "[parameters('mocOnpremNetwork').addressPrefix]"
    },
    "mocOnpremGatewayName": {
      "type": "string",
      "value": "[parameters('mocOnpremGateway').name]"
    }
  }
}